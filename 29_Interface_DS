interface IEnumerator
{
	bool hasNext();
	object next();
}
class Stack : IEnumerator
{
	private object []stack;
	private int top;
	public Stack(){
		stack = new object[5];
		top=-1;
	}
	public void push(object a){
		top++;
		stack[top]=a;
	}
	public bool hasNext(){
		if(top<0){
			return false;
		}
		return true;
	}
	public object next(){
		return(stack[top--]);
	}
}
class Queue : IEnumerator
{
	private object []queue;
	private int front, rear;
	public Queue(){
		front=0;
		rear=0;
		queue=new object[5];
	}
	public void Enqueue(object a){
		queue[front]=a;
		front++;
	}
	public bool hasNext(){
		if(rear>=front){
			return false;
		}
		return true;
	}
	public object next(){
		return(queue[rear++]);
	}
}
class LinkedList
{
	private object data;
	private object next;
	public object getdata(){
		return data;
	}
	public void setdata(object a){
		data=a;
	}
	public void setnext(object a){
		next=a;
	}
	public object getnext(){
		return next;
	}
}
class LLMethods : IEnumerator{
	LinkedList prev, temp;
	object first;
	public object Add(object a){
		LinkedList nw=new LinkedList();
		nw.setdata(a);
		if(first==null){
			first=(object)nw;
			prev=nw;
			temp=nw;
		}
		else{
			prev.setnext((object)nw);
			prev=nw;
		}
		return first;
	}
	public bool hasNext(){
		if(temp!=null){
			return true;
		}
		return false;
	}
	public object next(){
		object t1 = temp.getdata();
		temp=(LinkedList)temp.getnext();
		return(t1);
	}
}

class Program{
	public static void Main(){
		Stack s = new Stack();
		Queue q = new Queue();
		LLMethods ll = new LLMethods();
		s.push(100);
		s.push(200);
		s.push(300);
		s.push(400);
		q.Enqueue(100);
		q.Enqueue(200);
		q.Enqueue(300);
		q.Enqueue(400);
		ll.Add(100);
		ll.Add(200);
		ll.Add(300);
		ll.Add(400);
		System.Console.Write("Stack data:   ");
		IEnumerator ie;
		ie = s;
		while(ie.hasNext()){
			System.Console.Write("{0}  ",ie.next());
		}
		System.Console.WriteLine();
		System.Console.Write("Queue Data:    ");
		ie=q;
		while(ie.hasNext()){
			System.Console.Write("{0}  ",ie.next());
		}
		System.Console.WriteLine();
		System.Console.Write("LinkedList Data:   ");
		ie=ll;
		while(ie.hasNext()){
			System.Console.Write("{0}  ",ie.next());
		}
		System.Console.WriteLine();
		System.Console.WriteLine();

	}
}